# https://medium.com/@antonio.cm.oliveira/how-to-access-your-rds-database-with-lambda-function-and-serverless-b7712dde9f80

# Welcome to serverless. Read the docs
# https://serverless.com/framework/docs/
# Serverless.yml is the configuration the CLI


service: send-establishment
provider:
  name: aws
  stage: prod
  runtime: nodejs6.10
  region: us-east-1
  vpc:
    securityGroupIds:
      - HERE_YOUR_SECURITY_GROUP 
    subnetIds:
      - HERE_YOUR_SUBNET_1
      - HERE_YOUR_SUBNET_2
      - HERE_YOUR_SUBNET_3
  environment:
    MYSQLHOST: 'xxxxx.rds.amazonaws.com'
    MYSQLPORT: 'xxx'
    MYSQLUSER: 'xxx'
    MYSQLPASS: 'xxxxx'
    MYSQLDATABASE: 'xxxx'
functions:
  send:
    handler: handler.send
    tags: 
      project: 'xxxx'
    events:
      - sns: arn:aws:sns:us-east-1:xxxxx:xxxx
resources:
  Resources:
    AWSLambdaVPCAccessExecutionRole:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        Description: Creating policy for vpc connetion.
        Roles:
          - {"Ref" : "IamRoleLambdaExecution"}
        PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - ec2:CreateNetworkInterface
                - ec2:DescribeNetworkInterfaces
                - ec2:DeleteNetworkInterface
              Resource: "*"
              
              
              
              
# this is a full template 
DBInstance:
  Type: AWS::RDS::DBInstance
  Properties:
    DBName:
      Ref: DBName
    Engine: MySQL
    MasterUsername:
      Ref: DBUsername
    DBInstanceClass:
      Ref: DBClass
    DBSecurityGroups:
    - Ref: DBSecurityGroup
    AllocatedStorage:
      Ref: DBAllocatedStorage
    MasterUserPassword:
      Ref: DBPassword
DBSecurityGroup:
  Type: AWS::RDS::DBSecurityGroup
  Properties:
    DBSecurityGroupIngress:
      EC2SecurityGroupName:
        Ref: WebServerSecurityGroup
    GroupDescription: Frontend Access
WebServerSecurityGroup:
  Type: AWS::EC2::SecurityGroup
  Properties:
    GroupDescription: Enable HTTP access via port 80 and SSH access
    SecurityGroupIngress:
    - IpProtocol: tcp
      FromPort: '80'
      ToPort: '80'
      CidrIp: 0.0.0.0/0
    - IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      CidrIp: 0.0.0.0/0
      
      
      
      
      
